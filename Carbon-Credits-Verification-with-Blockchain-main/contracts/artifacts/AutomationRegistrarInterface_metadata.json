{
	"compiler": {
		"version": "0.8.29+commit.ab55807c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "bytes",
								"name": "encryptedEmail",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "upkeepContract",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "gasLimit",
								"type": "uint32"
							},
							{
								"internalType": "address",
								"name": "adminAddress",
								"type": "address"
							},
							{
								"internalType": "uint8",
								"name": "triggerType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "checkData",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "triggerConfig",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "offchainConfig",
								"type": "bytes"
							},
							{
								"internalType": "uint96",
								"name": "amount",
								"type": "uint96"
							}
						],
						"internalType": "struct RegistrationParams",
						"name": "requestParams",
						"type": "tuple"
					}
				],
				"name": "registerUpkeep",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "string name = \"test upkeep\"; bytes encryptedEmail = 0x; address upkeepContract = 0x...; uint32 gasLimit = 500000; address adminAddress = 0x....; uint8 triggerType = 0; bytes checkData = 0x; bytes triggerConfig = 0x; bytes offchainConfig = 0x; uint96 amount = 1000000000000000000;",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Carbon-Credits-Verification-with-Blockchain-main/contracts/automationNode.sol": "AutomationRegistrarInterface"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
			"keccak256": "0xd3643595b0a46f577fff806736cbe4e3f81707c93fb1693a8a7960466e5cd321",
			"license": "MIT",
			"urls": [
				"bzz-raw://f7cccfc386f9cdb9037db66dd85a31347af8b733f39a18cbc12dbf1f5812d02d",
				"dweb:/ipfs/QmcE3Hef9XLSbthiS3DKQFF1ZpYDZsPLHwW1DY5iUGAfcd"
			]
		},
		"Carbon-Credits-Verification-with-Blockchain-main/contracts/automationNode.sol": {
			"keccak256": "0xfa2ec142c86eef52d6eacf8016100fa930a76b0971646a554f786c5740a6d195",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5e05fdb1d8f9ce7c24fe731ec7b42ca7e6f223ef62cae8a2ebd67882eb46432",
				"dweb:/ipfs/Qmf8m3YEej5k6Z9bguvqVEzpTr5SK49g6sUgfW78SDbjzt"
			]
		}
	},
	"version": 1
}